# PYTHON IMPLEMENTATION 


## Data Set

<<fig = False,  width = '12 cm', echo = True>>=
from datos import data
d=data('mtcars')
d.head()
@


## Dependences

* Matplotlib
* Seaborn
* Pyqtgraph
* Pandas


## Code Example


### Matplotlib

<<fig = True, width = '12 cm', echo = True>>=
import matplotlib.patches as p
import matplotlib.pyplot as plt
import pandas
import math
from datos import data

fig=plt.figure(1, figsize=(4,4))
ax = plt.subplot(111, aspect='equal')
colors=['#FF9999', 'lightskyblue','#66FF66' ]
d=data('mtcars')
ps = pandas.Series([i for i in d.gear])
counts = ps.value_counts()

x=0.05
y=0.9 
m=0
cols=1
for i in counts:	
	for j in range(i):	
		p1 = p.Circle((x, y), 0.05, fc=colors[m], edgecolor='white')
		x=x+0.1
		ax.add_patch(p1)
		cols=cols+1
		if (cols>10):
			cols=1
			x=0.05
			y=y-0.1		
	m=m+1
x=0.05
y=0.3
m=0
for i in counts.index:	
	p2 = p.Circle((x, y), 0.05, fc=colors[m], edgecolor='white')
	ax.add_patch(p2)
	plt.text(x+0.17, y-0.03, str(int(i))+" gear", ha="center", family='sans-serif', size=11, color='b' )
	#y=y-0.13
	x=x+0.35
	m=m+1

ax.axis('off')
plt.title("Dot Matrix by Number of Gears", color='b', family='sans-serif', size=14)
plt.show()
@


### Seaborn

<<fig = True, width = '12 cm', echo = True>>=
import matplotlib.patches as p
import matplotlib.pyplot as plt
import pandas
import seaborn as sns
from datos import data

sns.set(style="white")
colors = sns.husl_palette(10)

fig=plt.figure(1, figsize=(4,4))
ax = plt.subplot(111, aspect='equal')
d=data('mtcars')
ps = pandas.Series([i for i in d.gear])
counts = ps.value_counts()

x=0.05
y=0.9 
m=0
cols=1
for i in counts:	
	for j in range(i):	
		p1 = p.Circle((x, y), 0.05, fc=colors[m], edgecolor='white')
		x=x+0.1
		ax.add_patch(p1)
		cols=cols+1
		if (cols>10):
			cols=1
			x=0.05
			y=y-0.1		
	m=m+4
x=0.05
y=0.3
m=0
for i in counts.index:
	p2 = p.Circle((x, y), 0.05, fc=colors[m], edgecolor='white')
	ax.add_patch(p2)
	plt.text(x+0.17, y-0.03, str(int(i))+" gear", ha="center", family='sans-serif', size=11, color='b' )	
	x=x+0.35
	m=m+4

ax.axis('off')
plt.title("Dot Matrix by Number of Gears", color='b', family='sans-serif', size=14)
plt.show()
@


### Pyqtgraph

<<fig = True, width = '12 cm', echo = True>>=
import pyqtgraph as pg
from  PyQt4  import  QtGui
import pandas
from datos import data

win = pg.GraphicsWindow("Dot Matrix ")
win.resize(300,300)
v = win.addViewBox()
v.setAspectLocked()
text = pg.TextItem("Dot Matrix by Number of Gears ", anchor=(-0.1,22.5), color='w')
v.addItem(text)
d=data('mtcars')
ps = pandas.Series([i for i in d.gear])
counts = ps.value_counts()
position=[ (-0.5,15), (-2,15), (-3.5,15)]
colours = [QtGui.QColor('springgreen'), QtGui.QColor('lightskyblue'), QtGui.QColor('lightcoral')]

x=0.0
y=1.0 
m=0
cols=1

for i in counts:	
	for j in range(i):			
		ellipse = QtGui.QGraphicsEllipseItem(x,y,0.05,0.05)
		ellipse.setBrush(colours[m])		
		v.addItem(ellipse)
		x=x+0.05		
		cols=cols+1
		if (cols>10):
			cols=1
			x=0.0
			y=y-0.05		
	m=m+1

x=0
y=0.7
m=0
for i in counts.index:	
	ellipse = QtGui.QGraphicsEllipseItem(x,y,0.05,0.05)
	ellipse.setBrush(colours[m])
	v.addItem(ellipse)	
	x=x+0.15
	m=m+1
j=0
for x in counts.index:
    text = pg.TextItem(str(int(x))+" gear", anchor=(position[j]), color='w')
    v.addItem(text)
    j+=1 
        
if __name__ == '__main__':
    import sys
    if (sys.flags.interactive != 1) or not hasattr(QtCore, 'PYQT_VERSION'):
        QtGui.QApplication.instance().exec_()
@


### References
